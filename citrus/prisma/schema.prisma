generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["experiences", "organizers", "users"]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model experiences {
  event_id              String                  @id @db.VarChar(255)
  event_name            String                  @db.VarChar(255)
  capacity              BigInt?
  event_location        String?
  event_start           DateTime?               @db.Timestamptz(6)
  event_end             DateTime?               @db.Timestamptz(6)
  event_description     String?
  category              String?
  tags                  String[]
  attendees             String[]
  org_id                String?                 @db.VarChar(32)
  user_id               String?                 @db.VarChar(32)
  organizers            organizers?             @relation(fields: [org_id], references: [org_id], onDelete: NoAction, onUpdate: NoAction)
  users                 users?                  @relation(fields: [user_id], references: [username], onDelete: NoAction, onUpdate: NoAction)
  user_attending_status user_attending_status[]

  @@schema("experiences")
}

model organizers {
  org_id                String        @id @db.VarChar(32)
  display_name          String?       @db.VarChar(64)
  organizer_description String?
  pass                  String        @db.VarChar(60)
  email                 String?       @unique @db.VarChar(255)
  phone_number          String?       @unique @db.VarChar(13)
  socials               String[]
  premium               Boolean?      @default(false)
  experiences           experiences[]

  @@schema("organizers")
}

model user_attending_status {
  username    String                 @id @db.VarChar(32)
  event_id    String?                @db.VarChar(255)
  attending   attending_status_type?
  experiences experiences?           @relation(fields: [event_id], references: [event_id], onDelete: NoAction, onUpdate: NoAction)
  users       users                  @relation(fields: [username], references: [username], onDelete: NoAction, onUpdate: NoAction)

  @@schema("users")
}

model users {
  username              String                 @id @db.VarChar(32)
  pass                  String                 @db.VarChar(60)
  email                 String                 @unique @db.VarChar(255)
  phone_number          String?                @unique @db.VarChar(15)
  socials               String[]
  premium               Boolean?               @default(false)
  experiences           experiences[]
  user_attending_status user_attending_status?

  @@schema("users")
}

enum attending_status_type {
  attending
  attended
  interested

  @@schema("users")
}
